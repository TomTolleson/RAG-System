name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      milvus:
        image: milvusdb/milvus:v2.4.12
        env:
          ETCD_ENDPOINTS: etcd:2379
          MINIO_ADDRESS: minio:9000
        ports:
          - 19530:19530
        options: >-
          --health-cmd "sleep 30"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      etcd:
        image: quay.io/coreos/etcd:v3.5.5
        ports:
          - 2379:2379
        env:
          ETCD_AUTO_COMPACTION_MODE: revision
          ETCD_AUTO_COMPACTION_RETENTION: 1000
          ETCD_QUOTA_BACKEND_BYTES: 4294967296
          ETCD_SNAPSHOT_COUNT: 50000
      
      minio:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
          MINIO_DEFAULT_BUCKETS: "mybucket:public"
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
        
    - name: Type check with mypy
      run: |
        pip install mypy types-all
        mypy src/
        
    - name: Run tests with pytest
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        MILVUS_HOST: localhost
        MILVUS_PORT: 19530
      run: |
        pytest --cov=src tests/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Run Bandit
      run: bandit -r src/
      
    - name: Run Safety Check
      run: safety check