name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    services:
      milvus:
        image: milvusdb/milvus:v2.3.5-standalone
        env:
          ETCD_ENDPOINTS: localhost:2379
          MINIO_ADDRESS: localhost:9000
          STANDALONE: "true"
        ports:
          - 19530:19530
          - 9091:9091
        options: >-
          --health-cmd "sleep 60"
          --health-interval 30s
          --health-timeout 20s
          --health-retries 3
      
      minio:
        image: quay.io/minio/minio:RELEASE.2024-02-26T09-33-48Z
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        options: >-
          --health-cmd "sleep 10"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint "minio server /data"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest pytest-cov pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
        
    - name: Type check with mypy
      run: |
        pip install mypy types-all
        mypy src/
        
    - name: Run tests with pytest
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        MILVUS_HOST: localhost
        MILVUS_PORT: 19530
      run: |
        pytest --cov=src tests/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Run Bandit
      run: bandit -r src/
      
    - name: Run Safety Check
      run: safety check